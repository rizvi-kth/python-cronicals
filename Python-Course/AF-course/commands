C:\Users\A547184
Î» python
Python 3.6.0 |Anaconda 4.3.0 (64-bit)| (default, Dec 23 2016, 11:57:41) [MSC v.1900 6
Type "help", "copyright", "credits" or "license" for more information.
>>> range(int(1e6))
range(0, 1000000)
>>> [i ** 2 for i in range(int(1e6) if str(i) == str(i)[::-1] ) ]
  File "<stdin>", line 1
    [i ** 2 for i in range(int(1e6) if str(i) == str(i)[::-1] ) ]
                                                              ^
SyntaxError: invalid syntax
>>> [i ** 2 for i in range(int(1e6)) if str(i) == str(i)[::-1]  ]
[0, 1, 4, 9, 16, 25, 36, 49, 64, 81, 121, 484, 1089, 1936, 3025, 4356, 5929, 7744, 98
49284, 53824, 58564, 63504, 68644, 73984, 79524, 85264, 91809, 97969, 104329, 110889,
 206116, 215296, 224676, 234256, 244036, 255025, 265225, 275625, 286225, 297025, 3080
56, 456976, 470596, 484416, 499849, 514089, 528529, 543169, 558009, 573049, 588289, 6
88544, 806404, 826281, 844561, 863041, 881721, 900601, 919681, 938961, 958441, 978121
1, 3964081, 4008004, 4460544, 4937284, 5438224, 5963364, 6512704, 7086244, 7683984, 8
35529, 15077689, 15944049, 16032016, 16924996, 17842176, 18783556, 19749136, 20738916
25, 30858025, 32092225, 33350625, 34633225, 35940025, 36072036, 37405456, 38763076, 4
 52229529, 53831569, 55457809, 57108249, 58782889, 60481729, 62204769, 63952009, 6412
964004, 81162081, 83156161, 85174441, 87216921, 89283601, 91374481, 93489561, 9562884
 112381201, 114511401, 116661601, 118831801, 121242121, 123454321, 125686521, 1279387
41, 149352841, 151807041, 154281241, 156775441, 159289641, 161823841, 164378041, 1669
40361, 191296561, 194072761, 197149681, 199967881, 202806081, 205664281, 208542481, 2
35653201, 238733401, 241833601, 244953801, 248094001, 251254201, 254434401, 257955721
, 287675521, 291419041, 294843241, 298287441, 301751641, 305235841, 308740041, 312264
361, 345253561, 348979761, 352725961, 356492161, 360278361, 364466281, 368294481, 372
080004, 404090404, 408120804, 412171204, 416241604, 420332004, 424442404, 428572804,
467078544, 471410944, 475763344, 480135744, 484968484, 489382884, 493817284, 49827168
4, 539725824, 544382224, 549058624, 553755024, 558471424, 563207824, 567964224, 57274
6564, 617124964, 622103364, 627602704, 632623104, 637663504, 642723904, 647804304, 65
4955044, 700237444, 705539844, 710862244, 716204644, 721567044, 726949444, 732893184,
 782432784, 788598724, 794225124, 799871524, 805537924, 811224324, 816930724, 8226571
64, 875686464, 881614864, 887563264, 893531664, 899520064, 900180009, 906190609, 9122
06169, 968018769, 974251369, 980503969, 986776569, 993069169, 999381769, 1005714369,
745529, 1064260129, 1070794729, 1077349329, 1083923929, 1091179089, 1097795689, 11044
9, 1158925849, 1165744449, 1172583049, 1179441649, 1186320249, 1193218849, 1200137449
56915209, 1264015809, 1271136409, 1278277009, 1285437609, 1292618209, 1300539969, 130
769, 1366263369, 1374407329, 1381831929, 1389276529, 1396741129, 1404225729, 14117303
1473254689, 1480941289, 1488647889, 1496374489, 1504121089, 1511887689, 1519674289, 1
82849, 1591451449, 1599440049, 1600320016, 1608330816, 1616361616, 1624412416, 163248
, 1698593796, 1706846596, 1715119396, 1723412196, 1731724996, 1740057796, 1748410596,
6805376, 1825340176, 1833894976, 1842469776, 1851925156, 1860541956, 1869178756, 1877
36, 1948692736, 1957531536, 1966390336, 1975269136, 1984167936, 1993086736, 200202553
075166916, 2084287716, 2093428516, 2102589316, 2111770116, 2121892096, 2131114896, 21
7296, 2215961476, 2225386276, 2234831076, 2244295876, 2253780676, 2263285476, 2272810
 2350698256, 2360405056, 2370131856, 2379878656, 2389645456, 2399432256, 2410220836,
411236, 2499400036, 2500500025, 2510511025, 2520542025, 2530593025, 2540664025, 25507
5, 2633229225, 2643502225, 2653795225, 2664108225, 2674441225, 2684794225, 2695167225
79925625, 2790480625, 2801055625, 2812711225, 2823328225, 2833965225, 2844622225, 285
025, 2942520025, 2953379025, 2964258025, 2975157025, 2986076025, 2997015025, 30079740
3097479025, 3108620025, 3119781025, 3130962025, 3143284225, 3154507225, 3165750225, 3
55625, 3268980625, 3280425625, 3291890625, 3303375625, 3314880625, 3326405625, 333795
, 3432202225, 3443929225, 3455676225, 3467443225, 3479230225, 3492219025, 3504048025,
9400025, 3600720036, 3612731236, 3624762436, 3636813636, 3648884836, 3660976036, 3673
56, 3771925056, 3784218256, 3796531456, 3808864656, 3821217856, 3833591056, 384722467
947106276, 3959681476, 3973537296, 3986154496, 3998791696, 4011448896, 4024126096, 40
8516, 4140407716, 4153286916, 4166186116, 4179105316, 4192044516, 4205003716, 4217982
 4323851536, 4337012736, 4350193936, 4364716356, 4377939556, 4391182756, 4404445956,
614976, 4526060176, 4539525376, 4553010576, 4566515776, 4580040976, 4593586176, 46071
6, 4717766596, 4731513796, 4745280996, 4759068196, 4774257216, 4788086416, 4801935616
00980049, 4914991449, 4929022849, 4943074249, 4957145649, 4971237049, 4985348449, 499
889, 5114681289, 5128994689, 5143328089, 5157681489, 5172054889, 5187888729, 52023041
5318347329, 5334403369, 5349020769, 5363658169, 5378315569, 5392992969, 5407690369, 5
76409, 5542355809, 5557255209, 5572174609, 5587114009, 5602073409, 5617052809, 563355
, 5754284449, 5769465849, 5786188489, 5801411889, 5816655289, 5831918689, 5847202089,
1734729, 5987200129, 6002685529, 6018190929, 6033716329, 6049261729, 6064827129, 6080
69, 6207391369, 6223158769, 6238946169, 6256335409, 6272164809, 6288014209, 630388360
417291664, 6433323264, 6449374864, 6465446464, 6481538064, 6497649664, 6513781264, 65
4324, 6661497924, 6677831524, 6694185124, 6710558724, 6728592784, 6745008384, 6761443
 6895309444, 6911927044, 6928564644, 6945222244, 6961899844, 6978597444, 6995315044,
464704, 7148364304, 7165283904, 7182223504, 7199183104, 7216162704, 7234863364, 72518
4, 7388777764, 7407700624, 7424924224, 7442167824, 7459431424, 7476715024, 7494018624
34914884, 7652400484, 7669906084, 7687431684, 7704977284, 7722542884, 7740128484, 775
944, 7901076544, 7918864144, 7938453604, 7956283204, 7974132804, 7992002404, 80098920
8137663681, 8155715481, 8173787281, 8191879081, 8209990881, 8228122681, 8246274481, 8
41161, 8412374961, 8430728761, 8449102561, 8469336841, 8487752641, 8506188441, 852464
, 8674873321, 8693511121, 8712168921, 8730846721, 8749544521, 8768262321, 8787000121,
9513401, 8958433201, 8977373001, 8996332801, 9015312601, 9036213481, 9055235281, 9074
81, 9229252761, 9248476561, 9267720361, 9286984161, 9306267961, 9325571761, 934489556
502155441, 9521661241, 9541187041, 9560732841, 9580298641, 9599884441, 9621451921, 96
4321, 9798822121, 9820611801, 9840441601, 9860291401, 9880161201, 9900051001, 9919960
01, 10671096601, 10899568801, 11130461001, 11363773201, 11599505401, 11837657601, 120
13598125321, 13855879521, 14116053721, 14378647921, 14405040441, 14670296641, 1493797
9466241, 16908060961, 17195339161, 17485037361, 17777155561, 18071693761, 18368651961
081, 20546642281, 20863202481, 21182182681, 21503582881, 21827403081, 22153643281, 22
 24539535801, 24885378001, 25233640201, 25584322401, 25619523721, 25972867921, 263286
86741521, 28924145041, 29299511241, 29677297441, 30057503641, 30440129841, 3082517604
2961, 33628591161, 34033239361, 34440307561, 34849795761, 35261703961, 35676032161, 3
, 38687349481, 39121279681, 39557629881, 39996400081, 40000800004, 40442014404, 40885
058849604, 44105040144, 44568276544, 45033932944, 45502009344, 45972505744, 464454221
17284, 49872715684, 50365234084, 50860172484, 51357530884, 51857309284, 52359507684,
4, 55994703424, 56516503824, 57040724224, 57567364624, 57620161764, 58149464164, 5868
2471003364, 62526002704, 63077327104, 63631071504, 64187235904, 64745820304, 65306824
356644, 69359543044, 69940149444, 70523175844, 71108622244, 71696488644, 72286775044,
84, 76547395584, 77157283984, 77769592384, 78384320784, 78445926724, 79063317124, 796
84089560324, 84153368464, 84792780864, 85434613264, 86078865664, 86725538064, 8737463
6653209, 91992709809, 92661186409, 93332083009, 94005399609, 94681136209, 95359292809
169, 100243791769, 100941550369, 101641728969, 102344327569, 102414720529, 1031199811
108124565329, 108849185929, 108921781089, 109649063689, 110378766289, 111110888889, 1
9241849, 116378546449, 117130271049, 117884415649, 118640980249, 119399964849, 120161
09, 124858342609, 125636929209, 126417935809, 127201362409, 127987209009, 12877547560
33636306969, 134441755569, 135249624169, 136059912769, 136872621369, 136954025329, 13
439529, 143544750129, 144379480729, 144463086889, 145300479489, 146140292089, 1469825
9, 152172548649, 153031963249, 153893797849, 154758052449, 155624727049, 156493821649
1768057616, 162654116416, 163542595216, 164433494016, 165326812816, 166222551616, 167
63396, 172651884196, 173567224996, 174484985796, 175405166596, 176327767396, 17642016
, 182947820176, 183890022976, 184834645776, 184929241156, 185876525956, 186826230756,
541924356, 193638721936, 194608028736, 195579755536, 196553902336, 197530469136, 1985
1716, 204533680516, 205529849316, 206528438116, 207529446916, 208532875716, 209538724
 215726807296, 216749838096, 217775288896, 218803159696, 219833450496, 220866161296,
18102276, 228267995076, 229320307876, 230375040676, 230480647056, 231538041856, 23259
456, 240084320256, 240192128836, 241271545636, 242353382436, 243437639236, 2445243160
251106221025, 252209862025, 253315923025, 254424404025, 255535305025, 256648626025, 2
2289225, 264622792225, 265755715225, 266891058225, 268028821225, 269169004225, 270311
25, 277333890625, 278493675625, 279655880625, 280820505625, 280937101225, 28210438822
90343157225, 291529804225, 291648602025, 292837911025, 294029640025, 295223789025, 29
503025, 303771834025, 304985585025, 306201756025, 307420347025, 308641358025, 3098647
5, 317380123225, 318620736225, 319863769225, 321109222225, 322357095225, 323607388225
1286580625, 332554055625, 333823950625, 335096265625, 336371000625, 336498607225, 337
06225, 346785543225, 348082300225, 348212109025, 349511528025, 350813367025, 35211762
, 360007200036, 361328423236, 362652066436, 363978129636, 365306612836, 366637516036,
808430656, 376156515856, 377507021056, 378859946256, 380215291456, 381573056656, 3829
9476, 391282776676, 392660143876, 394039931076, 395422138276, 396806765476, 396945361
 406707205696, 408111434896, 409518084096, 409658882116, 411068193316, 412479924516,
29802916, 422572803136, 424004136336, 425437889536, 426874062736, 428312655936, 42975
556, 438596254756, 440054449956, 441515065156, 442978100356, 444443555556, 4459114307
454917874576, 456402931776, 457890408976, 459380306176, 460872623376, 462367360576, 4
7662596, 473049581796, 474563920996, 476080680196, 476232489216, 477751910416, 479273
16, 489994400016, 490009800049, 491551025449, 493094670849, 494640736249, 49618922164
05687387689, 507253055089, 508821142489, 510391649889, 511964577289, 513539924689, 51
948929, 524794478329, 526389427729, 527986797129, 529586586529, 531188795929, 5327934
9, 542634069769, 544255881169, 545880112569, 547506763969, 547669562209, 549298875609
0771829409, 562420502809, 562585503249, 564236838649, 565890594049, 567546769449, 569
44489, 579375201889, 581050979289, 582729176689, 584409794089, 586092831489, 58777828
, 598111984129, 599814623529, 601519682929, 603227162329, 604937061729, 606649381129,
146934569, 618876435969, 620608357369, 622342698769, 624079460169, 624253269409, 6259
3209, 638236416609, 639995200009, 640012800064, 641774027664, 643537675264, 645303742
 656129160324, 657912409924, 659698079524, 661486169124, 663276678724, 665069608324,
58883984, 677868995584, 679681527184, 681496478784, 683313850384, 685133641984, 68695
844, 698123749444, 699963143044, 701804956644, 703649190244, 705495843844, 7056806423
718676671504, 720542927104, 722411602704, 722598603364, 724469940964, 726343698564, 7
7761764, 739716964624, 741610324224, 743506103824, 745404303424, 747304923024, 749207
84, 760868909284, 762789130884, 764711772484, 766636834084, 768564315684, 77049421728
82319022144, 784266105744, 786215609344, 788167532944, 790121876544, 792078640144, 79
303204, 806041248804, 808017614404, 809996400004, 810016200081, 811997429881, 8139810
1, 827934388281, 828134580361, 830137832161, 832143503961, 834151595761, 836162107561
8478634641, 850506328441, 852536442241, 854568976041, 856603929841, 858641303641, 860
88921, 873176244721, 875233220521, 877292616321, 879354432121, 881418667921, 88348532
, 896144329201, 898228167001, 900314424801, 902403102601, 902612103481, 904703443281,
410581881, 921521281681, 921732484761, 923845846561, 925961628361, 928079830161, 9302
6241, 943188650041, 945326453841, 947466677641, 949609321441, 951754385241, 953901869
 967053925321, 969218591121, 971385676921, 973555182721, 975727108521, 977901454321,
17368801, 993408896601, 995602844401, 997799212201, 999998000001]
>>> [i ** 2 for i in range(int(1e6) if str(i ** 2) == str(i ** 2)[::-1] ) ]
  File "<stdin>", line 1
    [i ** 2 for i in range(int(1e6) if str(i ** 2) == str(i ** 2)[::-1] ) ]
                                                                        ^
SyntaxError: invalid syntax
>>> [i ** 2 for i in range(int(1e6)) if str(i ** 2) == str(i ** 2)[::-1] ]
[0, 1, 4, 9, 121, 484, 676, 10201, 12321, 14641, 40804, 44944, 69696, 94249, 698896,
 123454321, 125686521, 400080004, 404090404, 522808225, 617323716, 942060249, 1000020
>>> [i for i in range(int(1e6)) if str(i ** 2) == str(i ** 2)[::-1] ]
[0, 1, 2, 3, 11, 22, 26, 101, 111, 121, 202, 212, 264, 307, 836, 1001, 1111, 2002, 22
00001, 101101, 110011, 111111, 200002, 798644]
>>> ["{}{}".format(i,j) for i in range(10) for j in range(10)]
['00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12', '13',
, '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42',
', '58', '59', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71'
6', '87', '88', '89', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99']
>>>  L = [1,2,3,4,5,6,7,8,9] random.sample(L, 3)
  File "<stdin>", line 1
    L = [1,2,3,4,5,6,7,8,9] random.sample(L, 3)
    ^
IndentationError: unexpected indent
>>> L = [1,2,3,4,5,6,7,8,9] random.sample(L, 3)
  File "<stdin>", line 1
    L = [1,2,3,4,5,6,7,8,9] random.sample(L, 3)
                                 ^
SyntaxError: invalid syntax
>>> L = [1,2,3,4,5,6,7,8,9]
>>> random.sample(L, 3)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'random' is not defined
>>> import random
>>> random.sample(L, 3)
[9, 5, 3]
>>> filter(i%2==0, L)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'i' is not defined
>>> filter(lamda: s%2 == 0 , L)
  File "<stdin>", line 1
    filter(lamda: s%2 == 0 , L)
                ^
SyntaxError: invalid syntax
>>> filter(lamda s: s%2 == 0 , L)
  File "<stdin>", line 1
    filter(lamda s: s%2 == 0 , L)
                 ^
SyntaxError: invalid syntax
>>> list(filter(lamda s: s%2 == 0 , L))
  File "<stdin>", line 1
    list(filter(lamda s: s%2 == 0 , L))
                      ^
SyntaxError: invalid syntax
>>> list(filter(lambda s: s%2 == 0 , L))
[2, 4, 6, 8]
>>> len("ÃF")
2
>>> len("ÃF")
2
>>> "ÃF".encode()
b'\xc3\x85F'
>>> type(b'\xc3\x85F')
<class 'bytes'>
>>> "ab's".strip("'")
"ab's"
>>> "ab's".translate(None, "'")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: translate() takes exactly one argument (2 given)
>>> "ab's".translate(None, ''')
...
...
...
...
  File "<stdin>", line 4

    ^
SyntaxError: EOF while scanning triple-quoted string literal
>>> "ab's".translate(None, ''')
...
  File "<stdin>", line 1
    "ab's".translate(None, ''')
                              ^
SyntaxError: EOF while scanning triple-quoted string literal
>>> "ab's".translate(None, 'a')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: translate() takes exactly one argument (2 given)
>>> "ab's".translate(None, 'a')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: translate() takes exactly one argument (2 given)
>>> unicode(line.rstrip("\n\r"), "UTF-8")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'unicode' is not defined
>>> unicode("test", "UTF-8")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'unicode' is not defined
>>> unicode("test", "UTF-8")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'unicode' is not defined
>>> from itertools import combinations
>>> len(list( combinations(range(16), 3) ))
560
>>> list( combinations([1,2,3]))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: Required argument 'r' (pos 2) not found
>>> list( combinations(1,2,3))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: combinations() takes at most 2 arguments (3 given)
>>> mean(sum([1,2])/len([1,2]))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'mean' is not defined
>>> sum([1,2])
3
>>> len([1,2])
2
>>> sum([1,2])/len([1,2])
1.5
>>> mean = sum([1,2])/len([1,2])
>>> mean
1.5
>>> map(float,[1,3.0,4,6,6])
<map object at 0x0000022B0CF0A978>
>>> list(map(float,[1,3.0,4,6,6]))
[1.0, 3.0, 4.0, 6.0, 6.0]
>>> list(map(int,[1,3.0,4,6,6]))
[1, 3, 4, 6, 6]
>>> list(map(lambda s: s%2 == 0,[1,3.0,4,6,6]))
[False, False, True, True, True]
>>> list(filter(lambda s: s%2 == 0,[1,3.0,4,6,6]))
[4, 6, 6]
>>> list(filter(int,[1,3.0,4,6,6]))
[1, 3.0, 4, 6, 6]
>>> list(filter(lambda s: s%2 == 0,[1,3.0,4,6,6]))
[4, 6, 6]
>>> list(map(lambda s: s ** 2,[1,3.0,4,6,6]))
[1, 9.0, 16, 36, 36]
>>> list(map(int,[1,3.0,4,6,6]))
[1, 3, 4, 6, 6]
>>> dic([1,2])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'dic' is not defined
>>> dic([[1,2]])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'dic' is not defined
>>> Dic([[1,2]])
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'Dic' is not defined
>>> d = {}
>>> d = [[1,2]]
>>> d
[[1, 2]]
>>> d
[[1, 2]]
>>> d = {"key", 12}
>>> hash("key")
4366877726699808123
>>> d = dict([[1,None],[2,None]])
>>> d
{1: None, 2: None}
>>> d1={1:None, 3:none}
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'none' is not defined
>>> d1={1:None, 3:None}
>>> d = {"key", 12}
>>> d
{'key', 12}
>>> d1
{1: None, 3: None}
>>> d = dict([[1,None],[2,None]])
>>> d
{1: None, 2: None}
>>> hash(1)
1
>>> "{:x}".format(12345)
'3039'
>>> int(3034,16)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: int() can't convert non-string with explicit base
>>> int(3034,10)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: int() can't convert non-string with explicit base
>>> int("3034",10)
3034
>>> int("3034",16)
12340
>>> int("3034",8)
1564
>>> int("3034",16)
12340
>>> "{:^x}".format(12345)
'3039'
>>> "{:>30}{:^30}".format(12345, 5050) # 3034
'                         12345             5050             '
>>> d = {"key":"value", 12:1000}
>>> hash("key")
4366877726699808123
>>> hash(12)
12
>>> d[4366877726699808123] = "sd"
>>> d
{'key': 'value', 12: 1000, 4366877726699808123: 'sd'}
>>> d
{'key': 'value', 12: 1000, 4366877726699808123: 'sd'}
>>> d[4366877726699808123] = 12
>>> d
{'key': 'value', 12: 1000, 4366877726699808123: 12}
>>> hash(4366877726699808123)
2061034717486114172
>>> {x:x**2 for x in [1,2,3]}
{1: 1, 2: 4, 3: 9}
>>> {x:x**2 for x in [1,2,3]}
{1: 1, 2: 4, 3: 9}
>>> hash(4366877726699808123)
2061034717486114172
>>> {x:x**2 for x in [1,2,3]}
{1: 1, 2: 4, 3: 9}
>>> "{:>30}{:^30}".format(12345, 5050) # 3034
'                         12345             5050             '
>>>